// <auto-generated />
using System;
using MaquinaDeCafe.src.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MaquinaDeCafe.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IngredienteAdicionalPedido", b =>
                {
                    b.Property<Guid>("IngredientesAdicionaisId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PedidosId")
                        .HasColumnType("uuid");

                    b.HasKey("IngredientesAdicionaisId", "PedidosId");

                    b.HasIndex("PedidosId");

                    b.ToTable("PedidoIngredienteAdicional", (string)null);
                });

            modelBuilder.Entity("MaquinaDeCafe.src.Models.Entities.Cafe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Cafes", (string)null);
                });

            modelBuilder.Entity("MaquinaDeCafe.src.Models.Entities.FormaPreparo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("TempoPreparoMinutos")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FormasPreparo", (string)null);
                });

            modelBuilder.Entity("MaquinaDeCafe.src.Models.Entities.IngredienteAdicional", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("ValorExtra")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("IngredientesAdicionais", (string)null);
                });

            modelBuilder.Entity("MaquinaDeCafe.src.Models.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CafeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FormaPreparoId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FormaPreparoId1")
                        .HasColumnType("uuid");

                    b.Property<bool>("ProdutoDisponivel")
                        .HasColumnType("boolean");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TamanhoXicara")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoAcucar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoLeite")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CafeId");

                    b.HasIndex("FormaPreparoId");

                    b.HasIndex("FormaPreparoId1");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("IngredienteAdicionalPedido", b =>
                {
                    b.HasOne("MaquinaDeCafe.src.Models.Entities.IngredienteAdicional", null)
                        .WithMany()
                        .HasForeignKey("IngredientesAdicionaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaquinaDeCafe.src.Models.Entities.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MaquinaDeCafe.src.Models.Entities.Pedido", b =>
                {
                    b.HasOne("MaquinaDeCafe.src.Models.Entities.Cafe", "Cafe")
                        .WithMany("Pedidos")
                        .HasForeignKey("CafeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaquinaDeCafe.src.Models.Entities.FormaPreparo", "FormaPreparo")
                        .WithMany()
                        .HasForeignKey("FormaPreparoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MaquinaDeCafe.src.Models.Entities.FormaPreparo", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("FormaPreparoId1");

                    b.Navigation("Cafe");

                    b.Navigation("FormaPreparo");
                });

            modelBuilder.Entity("MaquinaDeCafe.src.Models.Entities.Cafe", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("MaquinaDeCafe.src.Models.Entities.FormaPreparo", b =>
                {
                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
